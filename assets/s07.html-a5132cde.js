import{_ as g,r as d,o as y,c as _,a as t,d as a,b as s,w as e,e as r}from"./app-eef777f9.js";const w={},b=t("h1",{id:"topic-7-user-authentication",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#topic-7-user-authentication","aria-hidden":"true"},"#"),a(" Topic 7: User Authentication")],-1),x=t("h2",{id:"readings-for-this-lecture",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#readings-for-this-lecture","aria-hidden":"true"},"#"),a(" Readings for This Lecture")],-1),k={href:"https://en.wikipedia.org/wiki/Password",target:"_blank",rel:"noopener noreferrer"},z={href:"https://en.wikipedia.org/wiki/Password_strength",target:"_blank",rel:"noopener noreferrer"},v={href:"https://en.wikipedia.org/wiki/Salt_(cryptography)",target:"_blank",rel:"noopener noreferrer"},A={href:"https://en.wikipedia.org/wiki/Password_cracking",target:"_blank",rel:"noopener noreferrer"},B={href:"https://en.wikipedia.org/wiki/Trusted_path",target:"_blank",rel:"noopener noreferrer"},P={href:"https://en.wikipedia.org/wiki/One-time_password",target:"_blank",rel:"noopener noreferrer"},T=r('<h2 id="three-a-s-of-information-security" tabindex="-1"><a class="header-anchor" href="#three-a-s-of-information-security" aria-hidden="true">#</a> Three A’s of Information Security</h2><ul><li>Security is about differentiating among authorized accesses and unauthorized accesses <ul><li>Confidentiality, Integrity, Availability all require this</li></ul></li><li>Authentication <ul><li>Figures out who is accessing</li></ul></li><li>Access control <ul><li>Ensure only authorized access are allowed</li></ul></li><li>Auditing <ul><li>Record what is happening, to identify attacks later and recover</li></ul></li></ul><h2 id="authentication-access-control-according-to-wikipedia" tabindex="-1"><a class="header-anchor" href="#authentication-access-control-according-to-wikipedia" aria-hidden="true">#</a> Authentication &amp; Access Control according to Wikipedia</h2><ul><li><strong>Authentication</strong> is the act of establishing or confirming something (or someone) as authentic, that is, that <strong>claims made by or about the subject are true</strong>. This might involve <strong>confirming the identity of a person</strong>, tracing the origins of an artifact, ensuring that a product is what its packaging and labeling claims to be, or <strong>assuring that a computer program is a trusted one.</strong></li><li><strong>Access control</strong> is a system which enables an authority to control access to areas and resources in a given physical facility or computer-based information system.</li></ul><h2 id="user-authentication" tabindex="-1"><a class="header-anchor" href="#user-authentication" aria-hidden="true">#</a> User Authentication</h2><ul><li>Using a method to validate users who attempt to access a computer system or resources, to ensure they are authorized.</li><li>Types of user authentication <ul><li><strong>Something you know</strong><ul><li>E.g., user account names and passwords</li></ul></li><li><strong>Something you have</strong><ul><li>Smart cards or other security tokens</li></ul></li><li><strong>Something you are</strong><ul><li>Biometrics</li></ul></li></ul></li></ul><h2 id="variants-of-passwords" tabindex="-1"><a class="header-anchor" href="#variants-of-passwords" aria-hidden="true">#</a> Variants of Passwords</h2><ul><li>Password</li><li>Passphrase <ul><li>a sequence of words or other text used for similar purpose as password</li></ul></li><li>Passcode</li><li>Personal identification number (PIN)</li></ul><h2 id="scenarios-requiring-user-authentication" tabindex="-1"><a class="header-anchor" href="#scenarios-requiring-user-authentication" aria-hidden="true">#</a> Scenarios Requiring User Authentication</h2><ul><li>Scenarios <ul><li>Logging into a local computer</li><li>Logging into a computer remotely</li><li>Logging into a network</li><li>Access web sites</li></ul></li><li>Vulnerabilities can exist at client side, server side, or communications channel.</li></ul><h2 id="threats-to-passwords" tabindex="-1"><a class="header-anchor" href="#threats-to-passwords" aria-hidden="true">#</a> Threats to Passwords</h2><ul><li>Eavesdropping (insecure channel between client and server)</li><li>Login spoofing (human errors), shoulder surfing, keyloggers</li><li>Offline dictionary attacks</li><li>Social engineering (human errors) <ul><li>e.g., pretexting: creating and using an invented scenario (the pretext) to persuade a target to release information or perform an action and is usually done over the telephone</li></ul></li><li>Online guessing (weak passwords)</li></ul><h2 id="guessing-attacks-two-factors-for-password-strength" tabindex="-1"><a class="header-anchor" href="#guessing-attacks-two-factors-for-password-strength" aria-hidden="true">#</a> Guessing Attacks: Two Factors for Password Strength</h2><ul><li><p>The average number of guesses the attacker must make to find the correct password</p><ul><li>determined by how unpredictable the password is, including how long the password is, what set of symbols it is drawn from, and how it is created.</li></ul></li><li><p>The ease with which an attacker can check the validity of a guessed password</p><ul><li>determined by how the password is stored, how the checking is done, and any limitation on trying passwords</li></ul></li></ul><h2 id="password-entropy" tabindex="-1"><a class="header-anchor" href="#password-entropy" aria-hidden="true">#</a> Password Entropy</h2><ul><li><p>The entropy bits of a password, i.e., the information entropy of a password, measured in bits, is</p><ul><li>The base-2 logarithm of the number of guesses needed to find the password with certainty</li><li>A password with, say, 42 bits of strength calculated in this way would be as strong as a string of 42 bits chosen randomly.</li><li>Adding one bit of entropy to a password doubles the number of guesses required.</li></ul></li><li><p>Aka. Guess entropy</p></li></ul><h2 id="estimating-password-entropy" tabindex="-1"><a class="header-anchor" href="#estimating-password-entropy" aria-hidden="true">#</a> Estimating Password Entropy</h2><ul><li>People are notoriously remiss at achieving sufficient entropy to produce satisfactory passwords.</li><li>NIST <strong>suggests</strong> the following scheme to <strong>estimate</strong> the entropy of human-generated passwords: <ul><li>the entropy of the first character is four bits;</li><li>the entropy of the next seven characters are two bits per character;</li><li>the ninth through the twentieth character has 1.5 bits of entropy per character;</li><li>characters 21 and above have one bit of entropy per character.</li></ul></li><li>This would imply that an eight-character human-selected password has about 18 bits of entropy.</li></ul><h2 id="towards-better-measurement-of-password-entropy" tabindex="-1"><a class="header-anchor" href="#towards-better-measurement-of-password-entropy" aria-hidden="true">#</a> Towards Better Measurement of Password Entropy</h2><ul><li>NIST suggestion fails to consider usage of different category of characters: <ul><li>Lower-case letters, digits, upper-case letters, special symbols</li></ul></li><li>Orders also matter: <ul><li>“Password123!” should have different entropy from “ao3swPd!2s1r”</li></ul></li><li>State of art is to use variable-order markov chains to model probability of different strings as passwords <ul><li>“A Study of Probabilistic Password Models” by Ma, Yang, Luo, Li in IEEE SSP 2014.</li></ul></li><li>Fundamental challenge: there are different attack strategies out there, which try passwords with different ordering</li></ul><h2 id="example-of-weak-passwords-from-wikipedia" tabindex="-1"><a class="header-anchor" href="#example-of-weak-passwords-from-wikipedia" aria-hidden="true">#</a> Example of Weak Passwords (from Wikipedia)</h2>',21),S=r("<li>Default passwords (as supplied by the system vendor and meant to be changed at installation time): password, default, admin, guest, etc.</li><li>Dictionary words: chameleon, RedSox, sandbags, bunnyhop!, IntenseCrabtree, etc.</li><li>Words with numbers appended: password1, deer2000, john1234, etc.,</li><li>Words with simple obfuscation: p@ssw0rd, l33th4x0r, g0ldf1sh, etc.</li><li>Doubled words: crabcrab, stopstop, treetree, passpass, etc., can be easily tested automatically.</li><li>Common sequences from a keyboard row: qwerty, 12345, asdfgh, fred, etc.</li><li>Numeric sequences based on well known numbers such as 911, 314159, or 27182, etc.,</li><li>Identifiers: jsmith123, 1/1/1970, 555–1234, &quot;your username&quot;, etc.,</li><li>Anything personally related to an individual: license plate number, Social Security number, current or past telephone number, student ID, address, birthday, sports team, relative&#39;s or pet&#39;s names/nicknames/birthdays, etc., <ul><li>can easily be tested automatically after a simple investigation of person&#39;s details.</li></ul></li>",9),C={href:"http://www.tomshardware.com/news/imperva-rockyou-most-common-passwords,9486.html",target:"_blank",rel:"noopener noreferrer"},I=t("li",null,"[The Top 500 Worst Passwords of All Time] (http://www.whatsmypass.com/the-top-500-worst-passwords-of-all-time)",-1),H=r('<h2 id="mechanisms-to-avoid-weak-passwords" tabindex="-1"><a class="header-anchor" href="#mechanisms-to-avoid-weak-passwords" aria-hidden="true">#</a> Mechanisms to Avoid Weak Passwords</h2><ul><li>Allow long passphrases, forbid short passwords</li><li>Randomly generate passwords where appropriate <ul><li>Though probably inappropriate for most scenarios</li></ul></li><li>Give user suggestions/guidelines in choosing passwords <ul><li>e.g., think of a sentence and select letters from it, “It’s 12 noon and I am hungry” =&gt; “I’S12&amp;IAH”</li><li>Using both letter, numbers, and special characters</li></ul></li><li>Check the quality of user-selected passwords <ul><li>Use a number of rules of thumb; run dictionary attack tools</li><li>Evaluate strength of a password and explain the weaknesses</li></ul></li><li>This is an open research question <ul><li><em>Any suggestion?</em></li></ul></li></ul><h2 id="balancing-password-entropy-usability-concerns" tabindex="-1"><a class="header-anchor" href="#balancing-password-entropy-usability-concerns" aria-hidden="true">#</a> Balancing Password Entropy &amp; Usability Concerns</h2><ul><li>Forcing randomly generated passwords is often bad. <ul><li>A user needs to remember passwords for tens, if not hundreds of accounts</li><li>High entropy passwords are difficult to remember</li></ul></li><li>The “Weakest Link” security principle applies here <ul><li>Often times, guessing passwords is not the weakest link</li><li>One can use various ways to reduce adversary’s abilities to test password guesses</li><li>When a user cannot remember the password for an account, there must be a way to allow a user to retrieve it. <ul><li>The recovering method either has low security, or costs lots of money</li><li>It creates a weaker link.</li></ul></li></ul></li></ul><h2 id="another-relevant-security-principle" tabindex="-1"><a class="header-anchor" href="#another-relevant-security-principle" aria-hidden="true">#</a> Another Relevant Security Principle</h2><ul><li>Psychological acceptability: <ul><li>It is essential that the human interface be designed for ease of use, so that users routinely and automatically apply the protection mechanisms correctly. Also, to the extent that the user&#39;s mental image of his protection goals matches the mechanisms he must use, mistakes will be minimized. If he must translate his image of his protection needs into a radically different specification language, he will make errors.</li><li>Taken from Saltzer &amp; Schroeder: “<strong>The Protection of Information in Computer Systems</strong>”, which identifies 8 security principles, including the “open design” principle</li></ul></li></ul><p>Usability matters</p><h2 id="storing-passwords-unix-case-study" tabindex="-1"><a class="header-anchor" href="#storing-passwords-unix-case-study" aria-hidden="true">#</a> Storing Passwords (UNIX Case Study)</h2><ul><li>Old UNIX <ul><li>The file /etc/passwd stores H(password) together with each user’s login name, user id, home directory, login shell, etc. <ul><li>H is essentially a one-way hash function</li></ul></li><li>The file /etc/passwd must be world readable</li><li>Brute force attacks possible even if H is one-way <ul><li><em>how to most effectively brute-force when trying to obtain password of any account on a system with many accounts?</em></li></ul></li></ul></li></ul><h2 id="password-salts" tabindex="-1"><a class="header-anchor" href="#password-salts" aria-hidden="true">#</a> Password Salts</h2><ul><li>More modern UNIX <ul><li>Divide /etc/password into two files: /etc/password; and /etc/shadow (readable only by root)</li></ul></li><li>Store [r, H(password,r)] rather than H(password) in /etc/shadow <ul><li>r is randomly chosen for each password</li><li>r is public, similar to Initial Vector in CBC &amp; CTR modes</li></ul></li><li>Benefits <ul><li>dictionary attacks much more difficult <ul><li>cost of attacking a single account remains the same</li></ul></li><li>if two users happen to choose the same password, it doesn’t immediately show</li></ul></li></ul><h2 id="mechanisms-to-defend-against-dictionary-and-guessing-attacks" tabindex="-1"><a class="header-anchor" href="#mechanisms-to-defend-against-dictionary-and-guessing-attacks" aria-hidden="true">#</a> Mechanisms to Defend Against Dictionary and Guessing Attacks</h2><ul><li>Protect stored passwords (use both cryptography &amp; access control) <ul><li>An instance of the “Defense in Depth” principle: <ul><li>Use multiple independent method of defense, so that even if one layer fails, security is still not compromised</li><li>Consider, e.g., password dataset compromises</li></ul></li></ul></li><li>Disable accounts with multiple failed attempts</li><li>Require extra authentication mechanism (e.g., phone, other email account, etc.)</li></ul><h2 id="mechanisms-to-defend-against-login-spoofing-trusted-path" tabindex="-1"><a class="header-anchor" href="#mechanisms-to-defend-against-login-spoofing-trusted-path" aria-hidden="true">#</a> Mechanisms to Defend Against Login Spoofing: Trusted Path</h2><ul><li>Login Spoofing Attacks: <ul><li>write a program showing a login window on screen and record the passwords</li><li>put su in current directory</li></ul></li><li>Defense: Trusted Path <ul><li>Mechanism that provides confidence that the user is communicating with the real intended server <ul><li>attackers can&#39;t intercept or modify whatever information is being communicated.</li><li>defends attacks such as fake login programs</li></ul></li><li>Example: Ctrl+Alt+Del for log in on Windows <ul><li>Causes a non-maskable interrupt that can only be intercepted by the operating system, guaranteeing that the login window cannot be spoofed</li></ul></li></ul></li></ul><details class="custom-container details"><p>Principle of the Trusted Path (Yee, Ka-Ping): The most important input and output channels are those used to manipulate authorities; if these channels can be spoofed or corrupted, the system has a security vulnerability. Hence the principle of the trusted path: the user must have an unspoofable and incorruptible channel to any entity trusted to manipulate authorities on the user&#39;s behalf. The authority-manipulating entity could be a number of different things, depending on the domain. In an operating system, the authority-manipulating entities would be the operating system and user interface components for handling authorities.</p></details><h2 id="spoofing-defenses-on-the-web" tabindex="-1"><a class="header-anchor" href="#spoofing-defenses-on-the-web" aria-hidden="true">#</a> Spoofing &amp; Defenses on the Web</h2><ul><li>Phishing attacks <ul><li>attempting to acquire sensitive information such as usernames, passwords and credit card details by masquerading as a trustworthy entity in electronic communication.</li></ul></li><li>Website forgery <ul><li>Set up fake websites that look like e-commerce sites and trick users into visiting the sites and entering sensitive info</li></ul></li><li>Defense methods <ul><li>Browser filtering of known phishing sites</li><li>Cryptographic authentication of servers (will talk about in future)</li><li>User-configured authentication of servers <ul><li>To ensure that the site is the one the human user has in mind</li><li>E.g., site key, pre-selected picture/phrases</li></ul></li></ul></li></ul><h2 id="keylogging" tabindex="-1"><a class="header-anchor" href="#keylogging" aria-hidden="true">#</a> KeyLogging</h2><ul><li>Threats from insecure client side</li><li>Keystroke logging (keylogging) is the action of tracking (or logging) the keys struck on a keyboard, typically in a covert manner so that the person using the keyboard is unaware that their actions are being monitored.</li><li>Software-based <ul><li>key-stroke events, grab web forms, analyze HTTP packets</li></ul></li><li>Hardware-based <ul><li>Connector, wireless sniffers, acoustic based</li></ul></li><li>Defenses: <ul><li>Anti-spyware, network monitors, on-screen soft keyboard, automatic form filler, etc.</li><li>In general difficult to deal with once on the system</li></ul></li></ul><h2 id="using-passwords-over-insecure-channels" tabindex="-1"><a class="header-anchor" href="#using-passwords-over-insecure-channels" aria-hidden="true">#</a> Using Passwords Over Insecure Channels</h2><ul><li><p>One-time passwords</p><ul><li>Each password is used only once</li><li>Defend against passive adversaries who eavesdrop and later attempt to impersonate</li></ul></li><li><p>Challenge response</p><ul><li>Send a response related to both the password and a challenge</li></ul></li><li><p>Zero knowledge proof of knowledge</p><ul><li>Prove knowledge of a secret value, without leaking any info about the secret</li></ul></li></ul><h2 id="how-to-do-one-time-password" tabindex="-1"><a class="header-anchor" href="#how-to-do-one-time-password" aria-hidden="true">#</a> How to do One-Time Password</h2><ul><li><p>Shared lists of one-time passwords</p></li><li><p>Time-synchronized OTP</p><ul><li>E.g., use MACK(t), where K is shared secret, and t is current time</li></ul></li><li><p>Using a hash chain (Lamport)</p><ul><li>h(s), h(h(s), h(h(h(s))), …, h1000(s)</li><li>use these values as passwords in reverse order</li></ul></li></ul><h2 id="lamport-s-one-time-password-using-a-hash-chain" tabindex="-1"><a class="header-anchor" href="#lamport-s-one-time-password-using-a-hash-chain" aria-hidden="true">#</a> Lamport’s One-Time Password: Using a Hash Chain</h2>',25),E={class:"katex"},M={class:"katex-mathml"},q=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02691em;">w</span></span></span>',1),U={class:"katex"},D={class:"katex-mathml"},K=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mclose">)</span></span></span>',1),O={class:"katex"},L={class:"katex-mathml"},W=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.61508em;"></span><span class="strut bottom" style="height:0.61508em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span></span></span>',1),N={class:"katex"},R={class:"katex-mathml"},V=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.7935559999999999em;"></span><span class="strut bottom" style="height:1.043556em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="mord mathrm">0</span><span class="mrel">=</span><span class="mord"><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">t</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span>',1),G={class:"katex"},F={class:"katex-mathml"},j=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.64444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="mord mathrm">0</span></span></span>',1),X={class:"katex"},Y={class:"katex-mathml"},Z=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05017em;">B</span></span></span>',1),J={class:"katex"},Q={class:"katex-mathml"},$=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.64444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="mord mathrm">0</span></span></span>',1),ss={class:"katex"},es={class:"katex-mathml"},as=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.65952em;"></span><span class="strut bottom" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span><span class="mrel">≤</span><span class="mord mathit">i</span><span class="mrel">≤</span><span class="mord mathit">t</span></span></span>',1),ts={class:"katex"},ns={class:"katex-mathml"},ls=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.824664em;"></span><span class="strut bottom" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">A</span><span class="mpunct">,</span><span class="mord mathit">i</span><span class="mpunct">,</span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">i</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">t</span><span class="mbin">−</span><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span>',1),is={class:"katex"},rs={class:"katex-mathml"},os=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit">i</span><span class="mrel">=</span><span class="mord"><span class="mord mathit">i</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">A</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">i</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose">)</span><span class="mrel">=</span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),ps={class:"katex"},cs={class:"katex-mathml"},us=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.65952em;"></span><span class="strut bottom" style="height:0.80952em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">i</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">A</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit">i</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">A</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span>',1),ds=r('<h2 id="challenge-response-protocols" tabindex="-1"><a class="header-anchor" href="#challenge-response-protocols" aria-hidden="true">#</a> Challenge-Response Protocols</h2><ul><li><p>Goal: one entity authenticates to other entity proving the knowledge of a secret, ‘challenge’</p></li><li><p><strong>How to design this using the crypto tool we have learned?</strong></p></li><li><p>Approach: Use time-variant parameters to prevent replay, interleaving attacks, provide uniqueness and timeliness</p><ul><li>e.g., nounce (used only once), timestamps</li></ul></li></ul><h2 id="challenge-response-based-on-symmetric-key-crypto" tabindex="-1"><a class="header-anchor" href="#challenge-response-based-on-symmetric-key-crypto" aria-hidden="true">#</a> Challenge-response based on symmetric-key crypto</h2>',3),hs={class:"katex"},ms={class:"katex-mathml"},fs=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">M</span><span class="mord mathit">A</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.07153em;">K</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathit">t</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">A</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span>',1),gs={class:"katex"},ys={class:"katex-mathml"},_s=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05017em;">B</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),ws={class:"katex"},bs={class:"katex-mathml"},xs=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">M</span><span class="mord mathit">A</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.07153em;">K</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05017em;">B</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span>',1),ks={class:"katex"},zs={class:"katex-mathml"},vs=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05017em;">B</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),As={class:"katex"},Bs={class:"katex-mathml"},Ps=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">A</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.10903em;">M</span><span class="mord mathit">A</span><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.07153em;">K</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">A</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05017em;">B</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span>',1),Ts={class:"katex"},Ss={class:"katex-mathml"},Cs=r('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">M</span><span class="mord mathit">A</span><span class="mord mathit" style="margin-right:0.07153em;">C</span><span class="mord mathit" style="margin-right:0.07153em;">K</span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05017em;">B</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">A</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose">)</span></span></span>',1),Is=r('<h2 id="other-defenses" tabindex="-1"><a class="header-anchor" href="#other-defenses" aria-hidden="true">#</a> Other Defenses</h2><ul><li>Alternatives to passwords <ul><li>graphical passwords</li></ul></li><li>Go beyond passwords <ul><li>security tokens</li><li>biometrics</li><li>2-factor authentication <ul><li>Uses two independent authentication methods</li><li>US Banks are required to use 2-factor authentication by end of 2006 for online banking</li></ul></li><li>Out of band authentication: uses a channel other than the internet <ul><li>E.g., phone</li></ul></li></ul></li></ul><h2 id="open-problems" tabindex="-1"><a class="header-anchor" href="#open-problems" aria-hidden="true">#</a> Open Problems</h2><ul><li>Alternatives to passwords? <ul><li>The secret should be easy to remember, difficult to guess, and easy to enter into the system.</li></ul></li><li>Better measure of password quality.</li><li>Better ways to make user choose stronger passwords.</li><li>Better ways to use other devices for authentication</li><li>Effective 2-factored and/or out of band authentication for the Web</li><li>Phishing defense</li></ul>',4);function Hs(Es,Ms){const h=d("ExternalLinkIcon"),n=d("mi"),i=d("mrow"),p=d("annotation"),c=d("semantics"),u=d("math"),l=d("mo"),m=d("mn"),f=d("msup"),o=d("msub");return y(),_("div",null,[b,x,t("ul",null,[t("li",null,[a("Wikipedia "),t("ul",null,[t("li",null,[t("a",k,[a("Password"),s(h)])]),t("li",null,[t("a",z,[a("Password strength"),s(h)])]),t("li",null,[t("a",v,[a("Salt (Cryptography)"),s(h)])]),t("li",null,[t("a",A,[a("Password cracking"),s(h)])]),t("li",null,[t("a",B,[a("Trusted path"),s(h)])]),t("li",null,[t("a",P,[a("One-time password"),s(h)])])])])]),T,t("ul",null,[S,t("li",null,[t("a",C,[a("Top 20 Passwords In 32 million RockYou.com passwords"),s(h)])]),I]),H,t("ul",null,[t("li",null,[a("One-time setup: "),t("ul",null,[t("li",null,[a("A selects a value "),t("span",E,[t("span",M,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("w")]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("w")]),_:1})]),_:1})]),_:1})]),q]),a(", a hash function "),t("span",U,[t("span",D,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("H")]),_:1}),s(l,null,{default:e(()=>[a("(")]),_:1}),s(l,null,{default:e(()=>[a(")")]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("H()")]),_:1})]),_:1})]),_:1})]),K]),a(", and an integer "),t("span",O,[t("span",L,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("t")]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("t")]),_:1})]),_:1})]),_:1})]),W]),a(", computes "),t("span",N,[t("span",R,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("w")]),_:1}),s(m,null,{default:e(()=>[a("0")]),_:1}),s(l,null,{default:e(()=>[a("=")]),_:1}),s(f,null,{default:e(()=>[s(n,null,{default:e(()=>[a("H")]),_:1}),s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("t")]),_:1})]),_:1})]),_:1}),s(l,null,{default:e(()=>[a("(")]),_:1}),s(n,null,{default:e(()=>[a("w")]),_:1}),s(l,null,{default:e(()=>[a(")")]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("w0 = H^{t}(w)")]),_:1})]),_:1})]),_:1})]),V]),a(" and sends "),t("span",G,[t("span",F,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("w")]),_:1}),s(m,null,{default:e(()=>[a("0")]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("w0")]),_:1})]),_:1})]),_:1})]),j]),a(" to "),t("span",X,[t("span",Y,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("B")]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("B")]),_:1})]),_:1})]),_:1})]),Z])]),t("li",null,[a("B stores "),t("span",J,[t("span",Q,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("w")]),_:1}),s(m,null,{default:e(()=>[a("0")]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("w0")]),_:1})]),_:1})]),_:1})]),$])])])]),t("li",null,[a("Protocol: to identify to B for the i^th^ time, "),t("span",ss,[t("span",es,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(m,null,{default:e(()=>[a("1")]),_:1}),s(l,null,{default:e(()=>[a("≤")]),_:1}),s(n,null,{default:e(()=>[a("i")]),_:1}),s(l,null,{default:e(()=>[a("≤")]),_:1}),s(n,null,{default:e(()=>[a("t")]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("1 \\leq i \\leq t")]),_:1})]),_:1})]),_:1})]),as]),t("ul",null,[t("li",null,[a("A sends to B: "),t("span",ts,[t("span",ns,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("A")]),_:1}),s(l,{separator:"true"},{default:e(()=>[a(",")]),_:1}),s(n,null,{default:e(()=>[a("i")]),_:1}),s(l,{separator:"true"},{default:e(()=>[a(",")]),_:1}),s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("w")]),_:1}),s(n,null,{default:e(()=>[a("i")]),_:1})]),_:1}),s(l,null,{default:e(()=>[a("=")]),_:1}),s(f,null,{default:e(()=>[s(n,null,{default:e(()=>[a("H")]),_:1}),s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("t")]),_:1}),s(l,null,{default:e(()=>[a("−")]),_:1}),s(n,null,{default:e(()=>[a("i")]),_:1})]),_:1})]),_:1}),s(l,null,{default:e(()=>[a("(")]),_:1}),s(n,null,{default:e(()=>[a("w")]),_:1}),s(l,null,{default:e(()=>[a(")")]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("A, i, w_i = H^{t-i}(w)")]),_:1})]),_:1})]),_:1})]),ls])]),t("li",null,[a("B checks "),t("span",is,[t("span",rs,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("i")]),_:1}),s(l,null,{default:e(()=>[a("=")]),_:1}),s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("i")]),_:1}),s(n,null,{default:e(()=>[a("A")]),_:1})]),_:1}),s(l,{separator:"true"},{default:e(()=>[a(",")]),_:1}),s(n,null,{default:e(()=>[a("H")]),_:1}),s(l,null,{default:e(()=>[a("(")]),_:1}),s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("w")]),_:1}),s(n,null,{default:e(()=>[a("i")]),_:1})]),_:1}),s(l,null,{default:e(()=>[a(")")]),_:1}),s(l,null,{default:e(()=>[a("=")]),_:1}),s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("w")]),_:1}),s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("i")]),_:1}),s(l,null,{default:e(()=>[a("−")]),_:1}),s(m,null,{default:e(()=>[a("1")]),_:1})]),_:1})]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("i = i_A, H(w_i) = w_{i-1}")]),_:1})]),_:1})]),_:1})]),os])]),t("li",null,[a("if both holds, "),t("span",ps,[t("span",cs,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("i")]),_:1}),s(n,null,{default:e(()=>[a("A")]),_:1})]),_:1}),s(l,null,{default:e(()=>[a("=")]),_:1}),s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("i")]),_:1}),s(n,null,{default:e(()=>[a("A")]),_:1})]),_:1}),s(l,null,{default:e(()=>[a("+")]),_:1}),s(m,null,{default:e(()=>[a("1")]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("i_A = i_A + 1")]),_:1})]),_:1})]),_:1})]),us])])])])]),ds,t("ul",null,[t("li",null,[a("Unilateral authentication, timestamp-based "),t("ul",null,[t("li",null,[a("A to B: "),t("span",hs,[t("span",ms,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("M")]),_:1}),s(n,null,{default:e(()=>[a("A")]),_:1}),s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("C")]),_:1}),s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("K")]),_:1})]),_:1})]),_:1}),s(l,null,{default:e(()=>[a("(")]),_:1}),s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("t")]),_:1}),s(n,null,{default:e(()=>[a("A")]),_:1})]),_:1}),s(l,{separator:"true"},{default:e(()=>[a(",")]),_:1}),s(n,null,{default:e(()=>[a("B")]),_:1}),s(l,null,{default:e(()=>[a(")")]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("MAC_{K}(t_A, B)")]),_:1})]),_:1})]),_:1})]),fs])])])]),t("li",null,[a("Unilateral authentication, nounce-based "),t("ul",null,[t("li",null,[a("B to A: "),t("span",gs,[t("span",ys,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("r")]),_:1}),s(n,null,{default:e(()=>[a("B")]),_:1})]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("r_B")]),_:1})]),_:1})]),_:1})]),_s])]),t("li",null,[a("A to B: "),t("span",ws,[t("span",bs,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("M")]),_:1}),s(n,null,{default:e(()=>[a("A")]),_:1}),s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("C")]),_:1}),s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("K")]),_:1})]),_:1})]),_:1}),s(l,null,{default:e(()=>[a("(")]),_:1}),s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("r")]),_:1}),s(n,null,{default:e(()=>[a("B")]),_:1})]),_:1}),s(l,{separator:"true"},{default:e(()=>[a(",")]),_:1}),s(n,null,{default:e(()=>[a("B")]),_:1}),s(l,null,{default:e(()=>[a(")")]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("MAC_{K}(r_B, B)")]),_:1})]),_:1})]),_:1})]),xs])])])]),t("li",null,[a("Mutual authentication, nounce-based "),t("ul",null,[t("li",null,[a("B to A: "),t("span",ks,[t("span",zs,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("r")]),_:1}),s(n,null,{default:e(()=>[a("B")]),_:1})]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("r_B")]),_:1})]),_:1})]),_:1})]),vs])]),t("li",null,[a("A to B: "),t("span",As,[t("span",Bs,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("r")]),_:1}),s(n,null,{default:e(()=>[a("A")]),_:1})]),_:1}),s(l,{separator:"true"},{default:e(()=>[a(",")]),_:1}),s(n,null,{default:e(()=>[a("M")]),_:1}),s(n,null,{default:e(()=>[a("A")]),_:1}),s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("C")]),_:1}),s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("K")]),_:1})]),_:1})]),_:1}),s(l,null,{default:e(()=>[a("(")]),_:1}),s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("r")]),_:1}),s(n,null,{default:e(()=>[a("A")]),_:1})]),_:1}),s(l,{separator:"true"},{default:e(()=>[a(",")]),_:1}),s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("r")]),_:1}),s(n,null,{default:e(()=>[a("B")]),_:1})]),_:1}),s(l,{separator:"true"},{default:e(()=>[a(",")]),_:1}),s(n,null,{default:e(()=>[a("B")]),_:1}),s(l,null,{default:e(()=>[a(")")]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("r_A, MAC_{K}(r_A, r_B, B)")]),_:1})]),_:1})]),_:1})]),Ps])]),t("li",null,[a("B to A: "),t("span",Ts,[t("span",Ss,[s(u,null,{default:e(()=>[s(c,null,{default:e(()=>[s(i,null,{default:e(()=>[s(n,null,{default:e(()=>[a("M")]),_:1}),s(n,null,{default:e(()=>[a("A")]),_:1}),s(n,null,{default:e(()=>[a("C")]),_:1}),s(n,null,{default:e(()=>[a("K")]),_:1}),s(l,null,{default:e(()=>[a("(")]),_:1}),s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("r")]),_:1}),s(n,null,{default:e(()=>[a("B")]),_:1})]),_:1}),s(l,{separator:"true"},{default:e(()=>[a(",")]),_:1}),s(o,null,{default:e(()=>[s(n,null,{default:e(()=>[a("r")]),_:1}),s(n,null,{default:e(()=>[a("A")]),_:1})]),_:1}),s(l,null,{default:e(()=>[a(")")]),_:1})]),_:1}),s(p,{encoding:"application/x-tex"},{default:e(()=>[a("MACK(r_B, r_A)")]),_:1})]),_:1})]),_:1})]),Cs])])])])]),Is])}const Us=g(w,[["render",Hs],["__file","s07.html.vue"]]);export{Us as default};
